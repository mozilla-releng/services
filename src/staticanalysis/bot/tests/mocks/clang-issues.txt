Warning: Do not use 'else' after 'return' [clang-tidy: readability-else-after-return]
```

  else // readability-else-after-return
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
```
--------------------
Error: Methods annotated with MOZ_NO_DANGLING_ON_TEMPORARIES cannot be && ref-qualified [clang-tidy: mozilla-dangling-on-temporary]
```

  MOZ_NO_DANGLING_ON_TEMPORARIES int *get() && { return nullptr; } // mozilla-dangling-on-temporary
                                      ^
```
--------------------
Error: Methods annotated with MOZ_NO_DANGLING_ON_TEMPORARIES must return a pointer [clang-tidy: mozilla-dangling-on-temporary]
```

  MOZ_NO_DANGLING_ON_TEMPORARIES int test() { return 0; } // mozilla-dangling-on-temporary
                                     ^
```
--------------------
Warning: Redundant void argument list in function definition [clang-tidy: modernize-redundant-void-arg]
```

JS::ObjectOpResult::failCantRedefineProp(void) // modernize-redundant-void-arg
                                         ^~~~~
```
--------------------
Warning: Redundant void argument list in function definition [clang-tidy: modernize-redundant-void-arg]
```

JS_GetImplementationVersion(void)
                            ^~~~~
```
--------------------
Warning: Escaped string literal can be written as a raw string literal [clang-tidy: modernize-raw-string-literal]
```

                               "\"string\", \"number\", or \"default\"", source);
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               R"("string", "number", or "default")"
```
--------------------
Warning: Use auto when initializing with a cast to avoid duplicating the type name [clang-tidy: modernize-use-auto]
```

    uintptr_t u = reinterpret_cast<uintptr_t>(name);
    ^~~~~~~~~
    auto
```
--------------------
Warning: Use '= default' to define a trivial default constructor [clang-tidy: modernize-use-equals-default]
```

    AutoFile()
    ^
```
--------------------
Warning: Use '= default' to define a trivial destructor [clang-tidy: modernize-use-equals-default]
```

    ~AutoFile()
    ^
```
--------------------
Warning: Use '= default' to define a trivial destructor [clang-tidy: modernize-use-equals-default]
```

JS::AutoSetAsyncStackForNewCalls::~AutoSetAsyncStackForNewCalls()
                                  ^
```
--------------------
Warning: Use '= default' to define a trivial default constructor [clang-tidy: modernize-use-equals-default]
```

JSErrorNotes::JSErrorNotes()
              ^
```
--------------------
Warning: Use '= default' to define a trivial destructor [clang-tidy: modernize-use-equals-default]
```

JSErrorNotes::~JSErrorNotes()
              ^
```
--------------------
Warning: Redundant void argument list in function definition [clang-tidy: modernize-redundant-void-arg]
```

JS_PUBLIC_API(void)
              ^~~~~
```