Continuous Integration
======================

Every push to ``mozilla-releng/services`` is tested via Taskcluster_.

Integration with Github
-----------------------

Taskcluster supports `integration with Github`_ by defining tasks to run via
``.taskcluster.yml`` file. ``.taskcluster.yml`` of ``mozilla-releng/services``
file is generated by running:

.. code-block:: bash 

    % make taskcluster.yml

After ``.taskcluster.yml`` is generated review changes using ``git diff
.taskcluster.yml`` and commit it if changes are what you expected.


Generating ``.taskcluster.yml``
-------------------------------

``.taskcluster.yml`` is generated by looking into ``default.nix`` of each
service and taking task definitions from ``passthru.taskclusterGithubTasks``
option.

Services, at the time of writing this, are declaring tasks with following code
snippet:

.. code-block:: nix

    passthru.taskclusterGithubTasks =
       map
         (branch: mkTaskclusterGithubTask { inherit name branch; })
         [ "master" "staging" "production" ];

Above Nix code creates 3 tasks, one for each branch, and then calling
``mkTaskclusterGithubTask`` function, which accepts ``name`` and ``branch``
arguments. ``mkTaskclusterGithubTask`` is defined in ``nix/lib/default.nix``
and returns a YAML string representing one task.


Periodic tasks
--------------

Apart from building, testing and deploying services ``mozilla-releng/services``
you can also configure, in tree, tasks which will run on certain period.  In
taskcluster terminology this are called hooks and can be configured alongside
service configuration, ``default.nix``:

.. code-block:: nix

    mkBackend rec {
      name = "releng_clobberer";
      ...
      passthru = {
        ..
        taskclusterHooks = {
          master = {
            taskcluster_cache = mkTaskclusterHook {
              name = "create taskcluster cache";
              owner = "rgarbas@mozilla.com";
              schedule = [ "\*\/15 \* \* \* \* \*" ];
              taskImage = self.docker;
              taskCommand = [
                "flask"
                "taskcluster_workertypes" ">" "/taskcluster_cache.json"
              ];
            };
          };
        };
        ...
      };


.. _`Taskcluster`: https://docs.taskcluster.net
.. _`integration with Github`: https://docs.taskcluster.net/manual/vcs/github
