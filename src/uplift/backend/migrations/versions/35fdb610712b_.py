"""empty message

Revision ID: 35fdb610712b
Revises: 178ba7a1a742
Create Date: 2017-03-24 10:29:49.372639

"""

# revision identifiers, used by Alembic.
revision = '35fdb610712b'
down_revision = '178ba7a1a742'

TABLE = 'shipit_uplift_patch_status'

import sqlalchemy as sa
from alembic import op

# Declare pseudo table for alembic usage
patch_status = sa.sql.table(TABLE,
    sa.sql.column('id'),
    sa.sql.column('group'),
    sa.sql.column('merged'),
    sa.sql.column('status'),
    sa.sql.column('created'),
)

def upgrade():
    # Add status
    # There is a bug in alembic/postgres: the enum type is not created at first
    # So we need to trigger it
    # see https://bitbucket.org/zzzeek/alembic/issues/89/opadd_column-and-opdrop_column-should
    from shipit_uplift.models import PatchStatus
    bind = op.get_bind()
    typ = PatchStatus.__table__.c.status.type
    impl = typ.dialect_impl(bind.dialect)
    impl.create(bind, checkfirst=True)
    op.add_column('shipit_uplift_patch_status', sa.Column('status', sa.Enum('failed', 'merged', 'skipped', name='mergestatus')))

    # Empty group column
    op.add_column('shipit_uplift_patch_status', sa.Column('group', sa.Integer(), nullable=True))

    # Create dummy incrementing groups for existing tests
    connection = op.get_bind()
    i = 1
    patch_statuses = connection.execute(
        patch_status.select().order_by(patch_status.c.created.desc())
    )
    for ps in patch_statuses:
        op.execute(
            patch_status.update() \
                .where(patch_status.c.id==ps.id) \
                .values({
                    'group': i,
                    'status': ps.merged and 'merged' or 'failed',
                })
        )
        i += 1

    # Add constraints on group
    op.alter_column('shipit_uplift_patch_status', sa.Column('group', sa.Integer(), nullable=False))
    op.create_unique_constraint('uniq_patch_status_group', 'shipit_uplift_patch_status', ['bug_id', 'group', 'revision'])

    # Remove merged
    op.drop_column('shipit_uplift_patch_status', 'merged')

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uniq_patch_status_group', 'shipit_uplift_patch_status', type_='unique')
    op.drop_column('shipit_uplift_patch_status', 'group')
    op.add_column('shipit_uplift_patch_status', sa.Column('merged', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('shipit_uplift_patch_status', 'status')
    # ### end Alembic commands ###
