---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "RelEng Mapper"
  description: |
    RelEng Mapper is a tool that maps Mercurial changeset SHAs to Git
    commit IDs when converting code between the two tools.
  contact:
    name: Mozilla Release Engineering
    url: 'https://wiki.mozilla.org/ReleaseEngineering'
    email: release@mozilla.com
  license:
    name: Mozilla Public License Version 2.0
    url: 'https://www.mozilla.org/en-US/MPL/2.0/'

consumes:
  - application/json
produces:
  - application/json

paths:
  '/{project}':
    post:
      summary: Post a new project to the mapper.
      operationId: 'releng_mapper.api.post_project'
      parameters:
        - name: project
          in: path
          type: string
          description: Project name.
          required: true


      responses:
        200:
          description: New project successfully inserted into the database.
          schema:
            type: object
            description: Empty JSON response.

        409:
          description: Project with specified name already exists.
          schema:
            $ref: '#/definitions/Problem'


  '/{project}/insert/{git_commit}/{hg_changeset}':
    post:
      summary: Insert a single Git-Hg mapping.
      operationId: 'releng_mapper.api.post_hg_git_mapping'
      parameters:
        - name: project
          description: Project name.
          in: path
          type: string
          required: true

        - name: git_commit
          description: 40-character hexadecimal Git commit number.
          in: path
          type: string
          required: true

        - name: hg_changeset
          description: 40-character hexadecimal Mercurial changeset SHA.
          in: path
          type: string
          required: true

      responses:
        200:
          description: Git-Hg mapping successfully inserted.
          schema:
            type: object
            description: JSON representation of inserted data.
            properties:
              date_added:
                description: Date of insertion into database.
                type: string
                format: date-time

              project_name:
                description: Name of project for mapping.
                type: string

              git_commit:
                description: 40-character hexadecimal Git commit number.
                type: string

              hg_changeset:
                description: 40-character hexadecimal Mercurial changeset SHA.
                type: string

        400:
          description: Malformed SHA.
          schema:
            $ref: '#/definitions/Problem'

        404:
          description: Project not found in database.
          schema:
            $ref: '#/definitions/Problem'

        409:
          description: Mapping already exists for this project.
          schema:
            $ref: '#/definitions/Problem'

        500:
          description: Multiple matching projects found with new name.
          schema:
            $ref: '#/definitions/Problem'

  '/{project}/insert/ignoredups':
    post:
      summary: Insert many Git-Hg mapping entries and ignore duplicate entries silently.
      operationId: releng_mapper.api.post_insert_many_ignoredups
      consumes:
        - text/plain

      parameters:
        - name: project
          in: path
          type: string
          description: Project name.
          required: true

        - name: body
          in: body
          required: true
          description: Git-Hg mapfile.
          schema:
            type: string

      responses:
        200:
          description: Mapfile successfully inserted.
          schema:
            type: object
            description: Empty JSON response.

        400:
          description: Malformed SHA.
          schema:
            $ref: '#/definitions/Problem'

        404:
          description: Project not found in database.
          schema:
            $ref: '#/definitions/Problem'

        415:
          description: Request content-type is not 'text/plain'.
          schema:
            $ref: '#/definitions/Problem'

        500:
          description: Multiple matching projects found with new name.
          schema:
            $ref: '#/definitions/Problem'

  '/{project}/insert':
    post:
      summary: Insert many Git-Hg mapping entries and return an error on duplicate SHAs.
      operationId: releng_mapper.api.post_insert_many
      consumes:
        - text/plain
      parameters:
        - name: project
          in: path
          type: string
          description: Project name.
          required: true

        - name: body
          in: body
          required: true
          description: Git-Hg mapfile.
          schema:
            type: string

      responses:
        200:
          description: Mapfile successfully inserted.
          schema:
            type: object
            description: Empty JSON response.

        400:
          description: Malformed SHA.
          schema:
            $ref: '#/definitions/Problem'

        404:
          description: Project not found in database.
          schema:
            $ref: '#/definitions/Problem'

        409:
          description: Mapping already exists for this project.
          schema:
            $ref: '#/definitions/Problem'

        415:
          description: Request content-type is not 'text/plain'.
          schema:
            $ref: '#/definitions/Problem'

        500:
          description: Multiple matching projects found with new name.
          schema:
            $ref: '#/definitions/Problem'

  '/projects':
    get:
      summary: Return the list of defined project names, which are valid for the {project} parameter in other API calls.
      operationId: releng_mapper.api.get_projects
      responses:
        200:
          description: List of defined project names successfully retrieved.
          schema:
            title: List of defined project names.
            type: object
            properties:
              projects:
                type: array
                items:
                  description: Project name.
                  type: string

        404:
          description: Could not find any projects in the database.
          schema:
            $ref: '#/definitions/Problem'


  '/{projects}/mapfile/since/{since}':
    get:
      summary: Get a map file of insertions since the given date
      operationId: releng_mapper.api.get_mapfile_since
      parameters:
        - name: projects
          in: path
          type: string
          description: Comma-delimited project names(s) string
          required: true

        - name: since
          in: path
          type: string
          required: true
          description: |
            Timestamp in a format parsed by dateutil.parser.parse evaluated based on
            the time the record was inserted into mapper database,
            not the time of commit and not the time of conversion.

      responses:
        200:
          description: Mapfile successfully retrieved.
          schema:
            title: Mapfile since specified date.
            type: string

        400:
          description: Invalid date format specified.
          schema:
            $ref: '#/definitions/Problem'

        404:
          description: No results found.
          schema:
            $ref: '#/definitions/Problem'


  '/{projects}/mapfile/full':
    get:
      summary: Get a map file containing mappings for one or more projects.
      operationId: releng_mapper.api.get_full_mapfile
      parameters:
        - name: projects
          in: path
          type: string
          description: Comma delimited project name(s) string.
          required: true

      responses:
        200:
          description: Mapfile successfully retrieved.
          schema:
            title: Mapfile since specified date.
            type: string

        400:
          description: Invalid date format specified.
          schema:
            $ref: '#/definitions/Problem'


  '/{projects}/rev/{vcs_type}/{commit}':
    get:
      summary: Return the Hg changeset SHA for a Git commit ID, or vice-versa.
      operationId: releng_mapper.api.get_revision
      parameters:
        - name: projects
          in: path
          type: string
          description: Comma delimited project name(s) string.
          required: true

        - name: vcs_type
          in: path
          type: string
          enum:
            - hg
            - git
          required: true

        - name: commit
          in: path
          type: string
          description: Git commit ID or Hg changeset (depending on vcs_type value).
          required: true

      responses:
        200:
          description: Revision successfully mapped.
          schema:
            description: Single-line mapfile.
            type: string

        400:
          description: Unknown VCS or malformed SHA.
          schema:
            $ref: '#/definitions/Problem'

        404:
          description: No corresponding SHA found.
          schema:
            $ref: '#/definitions/Problem'

        500:
          description: Multiple corresponding SHAs found.
          schema:
            $ref: '#/definitions/Problem'



definitions:
  Problem:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: 'about:blank'
        example: 'https://zalando.github.io/problem/constraint-violation'
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized)
        example: Service Unavailable
      status:
        type: integer
        format: int32
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
