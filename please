#!/bin/sh

set -eu

# DEBUG
#set -x

silent() {
  out=`$@ 2>&1` || echo $out
}
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

USE_NIX=0
USE_DOCKER=0
# TODO: in addition to version we should also use hash of nix/docker folder
DOCKER_NAME="mozilla-releng-services-v`cat ./VERSION`"

case "`uname`" in
  Darwin)
    if hash docker 2>/dev/null; then
       USE_DOCKER=1
    fi
    ;; 
  Linux)
    if hash nix-build 2>/dev/null; then
         USE_NIX=1
    else
      if hash docker 2>/dev/null; then
         USE_DOCKER=1
      fi
    fi
    ;;
  *)
    echo "ERROR: Unknown platform '$OSTYPE'"
    exit 1
    ;;
esac

USE_DOCKER=1

USE_NIX=0
if [ -f /.dockerenv ]; then
  USE_NIX=1
  . /etc/nix/profile.sh;
fi

if [ "$USE_NIX" = "1" ]; then
  drv=`nix-instantiate nix/default.nix -A please-cli` 2> /dev/null
  nix_store_file=`cat $drv | cut -c17-91`
  if [ ! -e $nix_store_file ]; then
    echo -n "Building please command ... ";
    silent nix-build nix/default.nix -A please-cli -o result-please-cli;
    echo "${GREEN}DONE${NC}";
  fi
  exec ./result-please-cli/bin/please "$@";

else
  if [ "$USE_DOCKER" = "1" ]; then
    if [ ! "$(docker ps -q -f name=$DOCKER_NAME)" ]; then
      if [ ! "$(docker ps -qa -f name=$DOCKER_NAME)" ]; then
        docker run --privileged -td --name $DOCKER_NAME --volume="$(pwd)":/app --workdir=/app -p 8000-8100:8000-8100 mozillareleng/services:base-new-`cat ./VERSION`
      else
        docker start $DOCKER_NAME
      fi
   fi
   docker exec --tty --interactive --privileged $DOCKER_NAME ./please $@
   # TODO: stop old docker instances
  else
    # TODO: better error message and point to documentation
    echo "ERROR: please install nix or docker!"
  fi
fi
