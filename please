#!/bin/sh

set -eu

# DEBUG
#set -x

silent() {
  out=`$@ 2>&1` || echo $out
}
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'


USE_DOCKER=1
USE_NIX=0
if [ -f /.dockerenv ]; then
  USE_NIX=1
  . /etc/nix/profile.sh;
fi

if [ "$USE_NIX" = "1" ]; then
  drv=`nix-instantiate nix/default.nix -A please-cli` 2> /dev/null
  nix_store_file=`cat $drv | cut -c17-91`
  building_please_cli=0
  if [ ! -e $nix_store_file ]; then
    building_please_cli=1
    echo -n " => Building please command (this might take a minute or two the first time) ... ";
  fi
  silent nix-build nix/default.nix -A please-cli -o result-please-cli;
  if [ "$building_please_cli" = "1" ]; then
    echo "${GREEN}DONE${NC}";
  fi
  exec ./result-please-cli/bin/please "$@";

else
  if [ "$USE_DOCKER" = "1" ]; then
    DOCKER_HASH="`pwd``git rev-parse --abbrev-ref HEAD`"
    DOCKER_NAME="mozilla-releng-services-v`cat ./VERSION`-`echo -n $DOCKER_HASH | sha256sum | cut -d ' ' -f 1`"
    if [ ! "$(docker ps -q -f name=$DOCKER_NAME)" ]; then
      if [ ! "$(docker ps -qa -f name=$DOCKER_NAME)" ]; then
        docker run \
            --privileged \
            -td \
            --name $DOCKER_NAME \
            --volume="$(pwd)":/app \
            --volume=/var/run/docker.sock:/var/run/docker.sock \
            --workdir=/app \
            --network="host" \
            mozillareleng/services:base-`cat ./VERSION`
      else
        docker start $DOCKER_NAME
      fi
   fi
   docker exec --tty --interactive --privileged $DOCKER_NAME ./please $@
   # TODO: stop old docker instances
  else
    # TODO: better error message and point to documentation
    echo "${RED}ERROR: please install nix or docker!${NC}"
  fi
fi
